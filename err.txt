
* Kubespray 저장소 복제:
git clone https://github.com/kubernetes-sigs/kubespray.git
cd kubespray

cp -rfp /root/kubespray/inventory/sample/* /root/kubespray/inventory/mycluster/

* Docker 이미지 가져오기 또는 빌드:
docker run --rm -it \
  -v /root/kubespray/inventory/mycluster:/inventory \
  -v /root/kubespray/contrib/ansible-docker/ansible.cfg:/ansible.cfg \
  -v ~/.ssh/id_rsa:/root/.ssh/id_rsa \
  quay.io/kubespray/kubespray:v2.25.0 bash

3. Kubespray 설정
vi /inventory/inventory.ini

[all]
k8s-ctp01 ansible_host=k8s-ctp01  ip=10.142.0.6
k8s-wkn01 ansible_host=k8s-wkn01  ip=10.142.0.7

[kube_control_plane]
k8s-ctp01

[etcd]
k8s-ctp01

[kube_node]
k8s-wkn01

[calico_rr]

[k8s_cluster:children]
kube_control_plane
kube_node
calico_rr

4. Kubernetes 클러스터 배포
 * Ansible 플레이북 실행:
   다음 명령어를 사용하여 클러스터 배포를 시작합니다.
   # 컨테이너 내부
ansible-playbook -i /inventory/inventory.ini --become --become-user=root /kubespray/cluster.yml
=================
TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ***************************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:42 +0000 (0:00:00.408)       0:00:44.839 *********** 

TASK [kubernetes/preinstall : Enable ip forwarding] ***********************************************************************************************************************************************************************************************
ok: [k8s-wkn01]
ok: [k8s-ctp01]
Tuesday 20 May 2025  04:59:43 +0000 (0:00:00.538)       0:00:45.377 *********** 
Tuesday 20 May 2025  04:59:43 +0000 (0:00:00.114)       0:00:45.492 *********** 

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ***********************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:43 +0000 (0:00:00.396)       0:00:45.888 *********** 
Tuesday 20 May 2025  04:59:43 +0000 (0:00:00.119)       0:00:46.008 *********** 

TASK [kubernetes/preinstall : Ensure kubelet expected parameters are set] *************************************************************************************************************************************************************************
ok: [k8s-ctp01] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [k8s-wkn01] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [k8s-ctp01] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [k8s-wkn01] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [k8s-ctp01] => (item={'name': 'kernel.panic', 'value': 10})
ok: [k8s-wkn01] => (item={'name': 'kernel.panic', 'value': 10})
ok: [k8s-ctp01] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [k8s-wkn01] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [k8s-ctp01] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [k8s-wkn01] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [k8s-ctp01] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [k8s-wkn01] => (item={'name': 'vm.panic_on_oom', 'value': 0})
Tuesday 20 May 2025  04:59:45 +0000 (0:00:01.894)       0:00:47.903 *********** 

TASK [kubernetes/preinstall : Check dummy module] *************************************************************************************************************************************************************************************************
ok: [k8s-wkn01]
ok: [k8s-ctp01]
Tuesday 20 May 2025  04:59:46 +0000 (0:00:00.545)       0:00:48.448 *********** 
Tuesday 20 May 2025  04:59:46 +0000 (0:00:00.065)       0:00:48.514 *********** 

TASK [kubernetes/preinstall : Disable fapolicyd service] ******************************************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:47 +0000 (0:00:01.045)       0:00:49.560 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.068)       0:00:49.629 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.062)       0:00:49.691 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.076)       0:00:49.767 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.066)       0:00:49.834 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.069)       0:00:49.904 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.064)       0:00:49.968 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.066)       0:00:50.035 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.063)       0:00:50.099 *********** 
Tuesday 20 May 2025  04:59:47 +0000 (0:00:00.067)       0:00:50.167 *********** 

TASK [kubernetes/preinstall : Hosts | create hosts list from inventory] ***************************************************************************************************************************************************************************
ok: [k8s-ctp01 -> localhost]
Tuesday 20 May 2025  04:59:48 +0000 (0:00:00.126)       0:00:50.294 *********** 

TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] *************************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:48 +0000 (0:00:00.540)       0:00:50.834 *********** 
Tuesday 20 May 2025  04:59:48 +0000 (0:00:00.089)       0:00:50.924 *********** 

TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ********************************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:49 +0000 (0:00:00.398)       0:00:51.322 *********** 

TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] *****************************************************************************************************************************************************
ok: [k8s-ctp01] => (item=127.0.0.1 localhost localhost.localdomain)
ok: [k8s-wkn01] => (item=127.0.0.1 localhost localhost.localdomain)
ok: [k8s-ctp01] => (item=::1 localhost6 ip6-localhost localhost6.localdomain ip6-loopback)
ok: [k8s-wkn01] => (item=::1 localhost6 ip6-localhost localhost6.localdomain ip6-loopback)
Tuesday 20 May 2025  04:59:49 +0000 (0:00:00.394)       0:00:51.717 *********** 

TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ************************************************************************************************************************************************
ok: [k8s-ctp01] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [k8s-ctp01] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
ok: [k8s-wkn01] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}})
ok: [k8s-wkn01] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}})
Tuesday 20 May 2025  04:59:49 +0000 (0:00:00.202)       0:00:51.919 *********** 

TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] ***************************************************************************************************************************************************************************
changed: [k8s-ctp01] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [k8s-wkn01] => (item={'key': '127.0.0.1', 'value': ['localhost.localdomain', 'localhost']})
changed: [k8s-ctp01] => (item={'key': '::1', 'value': ['localhost6.localdomain', 'ip6-loopback', 'localhost6', 'ip6-localhost']})
changed: [k8s-wkn01] => (item={'key': '::1', 'value': ['localhost6.localdomain', 'ip6-loopback', 'localhost6', 'ip6-localhost']})
Tuesday 20 May 2025  04:59:50 +0000 (0:00:00.945)       0:00:52.865 *********** 

TASK [kubernetes/preinstall : Update facts] *******************************************************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:51 +0000 (0:00:00.713)       0:00:53.579 *********** 

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] **********************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:51 +0000 (0:00:00.434)       0:00:54.013 *********** 

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ******************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:52 +0000 (0:00:00.786)       0:00:54.801 *********** 
Tuesday 20 May 2025  04:59:52 +0000 (0:00:00.095)       0:00:54.896 *********** 
Tuesday 20 May 2025  04:59:52 +0000 (0:00:00.066)       0:00:54.963 *********** 
Tuesday 20 May 2025  04:59:52 +0000 (0:00:00.063)       0:00:55.027 *********** 
Tuesday 20 May 2025  04:59:52 +0000 (0:00:00.008)       0:00:55.035 *********** 
Tuesday 20 May 2025  04:59:52 +0000 (0:00:00.009)       0:00:55.045 *********** 

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] **************************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.452)       0:00:55.497 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.071)       0:00:55.569 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.067)       0:00:55.637 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.064)       0:00:55.701 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.070)       0:00:55.772 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.067)       0:00:55.839 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.069)       0:00:55.909 *********** 
Tuesday 20 May 2025  04:59:53 +0000 (0:00:00.066)       0:00:55.976 *********** 

TASK [Run calico checks] **************************************************************************************************************************************************************************************************************************
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.333)       0:00:56.310 *********** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] *********************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.107)       0:00:56.418 *********** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ****************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.098)       0:00:56.517 *********** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] *******************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.098)       0:00:56.615 *********** 
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.059)       0:00:56.674 *********** 

TASK [network_plugin/calico : Stop if supported Calico versions] **********************************************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.101)       0:00:56.776 *********** 

TASK [network_plugin/calico : Check if calicoctl.sh exists] ***************************************************************************************************************************************************************************************
ok: [k8s-ctp01]
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.334)       0:00:57.110 *********** 
Tuesday 20 May 2025  04:59:54 +0000 (0:00:00.065)       0:00:57.175 *********** 
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.043)       0:00:57.219 *********** 
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.044)       0:00:57.263 *********** 
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.078)       0:00:57.342 *********** 
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.042)       0:00:57.384 *********** 

TASK [network_plugin/calico : Check vars defined correctly] ***************************************************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.100)       0:00:57.485 *********** 

TASK [network_plugin/calico : Check calico network backend defined correctly] *********************************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.098)       0:00:57.584 *********** 

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] ************************************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.102)       0:00:57.687 *********** 
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.044)       0:00:57.731 *********** 

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ****************************************************************************************************************************************************************
ok: [k8s-ctp01] => {
    "changed": false,
    "msg": "All assertions passed"
}
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.103)       0:00:57.834 *********** 

TASK [network_plugin/calico : Get Calico default-pool configuration] ******************************************************************************************************************************************************************************
ok: [k8s-ctp01]
Tuesday 20 May 2025  04:59:55 +0000 (0:00:00.344)       0:00:58.178 *********** 
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.047)       0:00:58.226 *********** 
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.060)       0:00:58.286 *********** 
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.048)       0:00:58.335 *********** 
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.045)       0:00:58.380 *********** 
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.060)       0:00:58.441 *********** 

TASK [container-engine/validate-container-engine : Validate-container-engine | check if fedora coreos] ********************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.399)       0:00:58.840 *********** 

TASK [container-engine/validate-container-engine : Validate-container-engine | set is_ostree] *****************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:56 +0000 (0:00:00.151)       0:00:58.992 *********** 

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] ************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  04:59:57 +0000 (0:00:00.406)       0:00:59.399 *********** 

TASK [container-engine/validate-container-engine : Populate service facts] ************************************************************************************************************************************************************************
ok: [k8s-wkn01]
ok: [k8s-ctp01]
Tuesday 20 May 2025  05:00:02 +0000 (0:00:05.077)       0:01:04.476 *********** 

TASK [container-engine/validate-container-engine : Check if containerd is installed] **************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  05:00:03 +0000 (0:00:00.880)       0:01:05.357 *********** 

TASK [container-engine/validate-container-engine : Check if docker is installed] ******************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  05:00:03 +0000 (0:00:00.494)       0:01:05.851 *********** 

TASK [container-engine/validate-container-engine : Check if crio is installed] ********************************************************************************************************************************************************************
ok: [k8s-ctp01]
ok: [k8s-wkn01]
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.478)       0:01:06.329 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.086)       0:01:06.416 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.088)       0:01:06.505 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.094)       0:01:06.600 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.084)       0:01:06.684 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.200)       0:01:06.885 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.087)       0:01:06.973 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.083)       0:01:07.057 *********** 
Tuesday 20 May 2025  05:00:04 +0000 (0:00:00.094)       0:01:07.151 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.086)       0:01:07.238 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.088)       0:01:07.326 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.104)       0:01:07.431 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.117)       0:01:07.549 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.086)       0:01:07.636 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.087)       0:01:07.723 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.087)       0:01:07.810 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.111)       0:01:07.921 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.088)       0:01:08.010 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.100)       0:01:08.110 *********** 
Tuesday 20 May 2025  05:00:05 +0000 (0:00:00.085)       0:01:08.196 *********** 
Tuesday 20 May 2025  05:00:06 +0000 (0:00:00.185)       0:01:08.381 *********** 
Tuesday 20 May 2025  05:00:06 +0000 (0:00:00.094)       0:01:08.475 *********** 
Tuesday 20 May 2025  05:00:06 +0000 (0:00:00.098)       0:01:08.574 *********** 

TASK [container-engine/containerd-common : Containerd-common | check if fedora coreos] ************************************************************************************************************************************************************
ok: [k8s-ctp01]
Tuesday 20 May 2025  05:00:06 +0000 (0:00:00.381)       0:01:08.955 *********** 

TASK [container-engine/containerd-common : Containerd-common | set is_ostree] *********************************************************************************************************************************************************************
ok: [k8s-ctp01]
Tuesday 20 May 2025  05:00:06 +0000 (0:00:00.151)       0:01:09.106 *********** 

TASK [container-engine/containerd-common : Containerd-common | gather os specific variables] ******************************************************************************************************************************************************
ok: [k8s-ctp01] => (item=/kubespray/roles/container-engine/docker/vars/../vars/ubuntu.yml)
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.233)       0:01:09.340 *********** 
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.105)       0:01:09.446 *********** 
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.085)       0:01:09.531 *********** 
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.086)       0:01:09.617 *********** 
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.084)       0:01:09.702 *********** 
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.121)       0:01:09.823 *********** 
Tuesday 20 May 2025  05:00:07 +0000 (0:00:00.104)       0:01:09.928 *********** 

TASK [container-engine/docker : Docker | Get package facts] ***************************************************************************************************************************************************************************************
ok: [k8s-ctp01]
Tuesday 20 May 2025  05:00:10 +0000 (0:00:03.192)       0:01:13.120 *********** 

TASK [container-engine/docker : Docker | Find docker packages] ************************************************************************************************************************************************************************************
ok: [k8s-ctp01]
Tuesday 20 May 2025  05:00:11 +0000 (0:00:00.195)       0:01:13.316 *********** 
root@k8s-ctp01:~/kubespray/inventory/mycluster# 
root@k8s-ctp01:~/kubespray/inventory/mycluster# 

